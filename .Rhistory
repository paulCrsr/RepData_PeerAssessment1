setwd("/Users/posborne/Coursera/ReproducibleResearch/RepData_PeerAssessment1")
read.csv("activity.zip")
x <- read.csv("activity.zip")
View(x)
?read.csv
read.csv("activity.zip", header=TRUE)
read.delim("activity.zip", header=TRUE, sep=",")
read.delim("activity.zip", header=TRUE, sep=",")
read.table("activity.zip", nrows=10, header=T, quote="\"", sep=",")
read.csv(unz("activity.zip"))
unz("activity.zip")
?unz
unzip("activity.zip")
?unzip
ls()
dir()
unzip("activity.zip")
unzip("activity.zip")
View(activity)
unzip("activity.zip")
activity <- read.csv("activity.zip")
View(activity)
activity <- read.csv("activity.csv")
View(activity)
summary(activity)
?read.table
str(activity)
source('~/Coursera/ReproducibleResearch/RepData_PeerAssessment1/scratch.R')
source('~/Coursera/ReproducibleResearch/RepData_PeerAssessment1/scratch.R')
activity %>%
group_by(date) %>%
summarise_each(funs(mean(., na.rm=TRUE)), -interval)
source('~/Coursera/ReproducibleResearch/RepData_PeerAssessment1/scratch.R')
activity %>%
group_by(date) %>%
summarise_each(funs(mean(., na.rm=TRUE)), -interval) %>%
filter(is.na(steps))
source('~/Coursera/ReproducibleResearch/RepData_PeerAssessment1/scratch.R')
source('~/Coursera/ReproducibleResearch/RepData_PeerAssessment1/scratch.R')
getwd()
source('~/Coursera/ReproducibleResearch/RepData_PeerAssessment1/scratch.R')
setwd("/Users/posborne/Coursera/ReproducibleResearch/RepData_PeerAssessment1")
activity %>%
group_by(date) %>%
summarise_each(funs(mean(., na.rm=TRUE)), -interval) %>%
filter(!is.na(steps))
sink()
dev.off()
source('~/Coursera/ReproducibleResearch/RepData_PeerAssessment1/scratch.R')
activity %>%
group_by(date) %>%
summarise_each(funs(mean(., na.rm=TRUE)), -interval) %>%
filter(!is.na(steps))
histData <-
group_by(activity, date) %>%
summarise_each(funs(mean(., na.rm=TRUE)), -interval) %>%
filter(!is.na(steps))
library(dplyr)
histData <-
group_by(activity, date) %>%
summarise_each(funs(mean(., na.rm=TRUE)), -interval) %>%
filter(!is.na(steps))
source('~/Coursera/ReproducibleResearch/RepData_PeerAssessment1/scratch.R')
View(histData)
hist(histData,steps)
hist(histData$steps)
?library
stepsByDay <-
group_by(activity, date) %>%
summarise_each(funs(sum(., na.rm=TRUE)), -interval) %>%
filter(!is.na(step))
meanStepsPerDay <- mean(stepsByDay$steps)
```
hist(stepsByDay$steps, xlab="Daily steps", ylab="Frequency [Days]", breaks=15)
abline(h=meanStepsPerDay, col="red", lwd=2, lty=2)
abline(h=meanStepsPerDay, col="red")
abline(h=meanStepsPerDay, col="red", lwd=2)
abline(h=meanStepsPerDay, col="red", lwd=2, lty=1)
abline(v=meanStepsPerDay, col="red", lwd=2, lty=1)
abline(v=meanStepsPerDay, col="red", lwd=2, lty=3)
abline(v=meanStepsPerDay, col="red", lwd=2, lty=2)
hist(stepsByDay$steps, xlab="Daily steps", ylab="Frequency [Days]", breaks=15)
abline(v=meanStepsPerDay, col="red", lwd=2, lty=3)
text(meanStepsPerDay, x=meanStepsPerDay, y=15)
text(meanStepsPerDay, x=meanStepsPerDay, y=15, col="red")
round(meanStepsPerDay, 1)
round(meanStepsPerDay, 1)
install.packages("xtable")
x <- summary(stepsByDay$steps)
x
x <- summary(stepsByDay)
x
x[1]
x[,1]
x[steps]
x$steps
x
x$steps
summary(stepsByDay$steps)
summary(stepsByDay$steps)[,c("Mean", "Median")]
summary(stepsByDay$steps)[c("Mean", "Median"), ]
?xtable
library(xtable)
?xtable
?rug
stepsByInterval <-
group_by(activity, interval) %>%
summarise_each(funs(mean(., na.rm=TRUE)), -date)
;
View(stepsByInterval)
with(stepsByInterval, plot(interval, steps, type="l"))
sapply(activity$steps, is.na)
summary(sapply(activity$steps, is.na))
summary(tapply(activity$steps, is.na))
summary(sapply(activity$steps, is.na))
summary(sapply(activity$steps, is.na))[0,1]
summary(sapply(activity$steps, is.na))[0]
summary(sapply(activity$steps, is.na))[1]
x <- summary(sapply(activity$steps, is.na))
str(x)
x[1,"TRUE"]
summary(activity$steps)
summary(activity$steps)
x
x[1, "TRUE"]
x["TRUE", 1]
x[1,1]
x <- summary(sapply(activity$steps, is.na))
x
x[0]
x[1]
x[0,1]
x[1][1]
x[1][2]
x[2][1]
x[3][1]
x[3][1][0]
x[3][1]
x[3][1][1]
x[3]
x[3,1]
str(x[3])
x[3][0]
x[3][1]
x[3][2]
x[3][3]
x[3][1]
x[3]
str(x[3])
names(x)
x$FALSE
x
x$"FALSE"
x["FALSE"]
x[["FALSE"]]
x <- summary(sapply(activity$steps, is.na))
naCount <- x[["TRUE"]]
totalCount <- x[["FALSE"]] + naCount
x[["FALSE"]]
right_join(activity, stepsByInterval, by=c("interval"="interval"))
right_join(activity, stepsByInterval, by=c("interval"="interval")) %>% mutate(newSteps, ifelse())
?ifelse
y <- right_join(activity, stepsByInterval, by=c("interval"="interval"))
y$newSteps <- iflese(is.na(y$step.x), y$steps.y, y$steps.x)
y$newSteps <- ifelse(is.na(y$step.x), y$steps.y, y$steps.x)
ifelse(is.na(y$step.x), y$steps.y, y$steps.x)
ifelse(is.na(y$steps.x), y$steps.y, y$steps.x)
View(y)
tmp <- right_join(activity, stepsByInterval, by=c("interval"="interval"), suffix=c("orig","imputed"))
activity$imputedSteps <- ifelse(is.na(tmp$steps.orig), tmp$steps.imputed, tmp$steps.orig)
View(tmp)
View(activity)
tmp <- right_join(activity, stepsByInterval, by=c("interval"="interval"), suffix=c(".orig",".imputed"))
activity$imputedSteps <- ifelse(is.na(tmp$steps.orig), tmp$steps.imputed, tmp$steps.orig)
activity$imputedSteps <- ifelse(is.na(tmp$steps.orig), tmp$steps.imputed, tmp$steps.orig)
ifelse(is.na(tmp$steps.orig), tmp$steps.imputed, tmp$steps.orig)
source('~/Coursera/ReproducibleResearch/RepData_PeerAssessment1/scratch.R')
